#tictac-asgn4#ebakan### This program runs great!### Changes made: allow input for custom player letters, modified some error### loops, changed variable names for continuity### Things to work on: AI?#function: print grid#input:list of 9 elements to display#output: 9 elements easily displayeddef displayBoard(theBoard):        #loop through 3x for 3 rows        for i in range(3):            print (theBoard[i*3]+' | '+theBoard[i*3+1]+' | '+theBoard[i*3+2])            #if not the last line, print a divider            if i<2:                print('--+---+--')        print('\n')#function: get input from the user, check to see if it is valid, and place the#move on the board#input: the game board, the user#output: places the user's symbol on the board at the specified positiondef getHumanMove(theBoard,user):        #keep looping until a valid input is recieved        while True:                #attempt to get a valid input                try:                        x=int(raw_input('Space:'))-1                #excepts error for trying to cast a string as an integer                #checks for non-integer input                except ValueError:                        print("That's not an integer, sorry. Please try again.")                        continue                #check if input is within rnage                if x<0 or x>8:                        print("Sorry, that number not between 1 and 9. Please try again.")                        continue                #check to see if board space is already taken                if str(theBoard[x]).isalpha():                        print("Sorry, that space is already taken. Please try again.")                        continue                #if no error conditions met, break out of loop                break        theBoard[x]=user#function: check for a winner or a cat's game on the board#input: the game board#output: returns the winner if there is one, False if it is a cat's game, or#None if it is neitherdef getWinner(theBoard):        #check row and column possibilities        for i in range(3):                #check row wins                if theBoard[i*3]==theBoard[i*3+1]==theBoard[i*3+2]:                        return theBoard[i*3]                #check column wins                elif theBoard[i]==theBoard[i+3]==theBoard[i+6]:                        return theBoard[i]        #check diagonal        if theBoard[0]==theBoard[4]==theBoard[8] or theBoard[2]==theBoard[4]==theBoard[6]:                return theBoard[4]        #check cat's game        for i in theBoard:                #check to see if there are any digits, or empty spaces, on the                #board                if i.isdigit():                        return None        return False#function: Main game loop to play tic tac toe game#input: None#output Nonedef main():        theBoard=[]        #fill board with numbers        for i in range(9):                theBoard.append(str(i+1))        player1=raw_input("Choose Player 1's letter.").upper()        #check for valid input        while not player1.isalpha() or len(player1)!=1:                player1=raw_input("Sorry, that is not a valid input.\nChoose Player 1's letter.").upper()        player2=raw_input("Choose Player 2's letter.").upper()        #check for valid input        while not player2.isalpha() or len(player2)!=1 or player2==player1:                player2=raw_input("Sorry, that is not a valid input.\nChoose Player 2's letter.").upper()        displayBoard(theBoard)        player=player1        #main game loop        while True:                print(player+"'s Turn!")                getHumanMove(theBoard,player)                displayBoard(theBoard)                #check for a winner                if getWinner(theBoard):                        print(getWinner(theBoard)+" wins!")                        break                #check for a cat's game                elif getWinner(theBoard)==False:                        print("It's a cat's game!")                        break                #switch players                if player==player1:                        player=player2                else:                        player=player1#function: accepts input from user for playing again or quitting#input: None#output: returns True if user wants to quitdef quitter():        again=raw_input("Play again? (y/n)").lower()        #makes sure input is 'y' or 'n'        while again!='y' and again!='n':                again=raw_input("Sorry, that is not a valid input.\nPlay again? (y/n)").lower()        #returns true if user wants to quit        if again=='n':                return True#Main program loopwhile __name__=='__main__':        main()        #checks if user wants to quit        if quitter():                break        print("Let's play again!")                        